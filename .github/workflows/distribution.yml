name: Distribute IPA to Firebase App Distribution

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: macos-latest # 最新のMacOS

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'

    - name: Set Xcode version
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -runFirstLaunch

    - name: Cache CocoaPods
      uses: actions/cache@v2
      with:
        path: Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-

    - name: Install CocoaPods
      run: |
        gem install bundler
        bundle install
        pod install

    - name: Decrypt GoogleService-Info.plist
      run: |
        mkdir -p FlashEnglish/Resources/Firebase
        echo "$GOOGLE_SERVICE_INFO_PLIST_BASE64" | base64 --decode > FlashEnglish/Resources/Firebase/GoogleService-Info.plist
        # Check if the file exists
        if [ -f FlashEnglish/Resources/Firebase/GoogleService-Info.plist ]; then
          echo "GoogleService-Info.plist file exists."
        else
          echo "GoogleService-Info.plist file does not exist!"
        fi
        # List the directory to ensure the file is there
        ls -la FlashEnglish/Resources/Firebase/
        # Optionally print the first few lines of the file for verification
        head FlashEnglish/Resources/Firebase/GoogleService-Info.plist
      env:
        GOOGLE_SERVICE_INFO_PLIST_BASE64: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}

    - name: Set up Fastlane
      run: bundle exec fastlane match adhoc --readonly
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}

    - name: Enable Parallel Code Signing
      run: |
        defaults write com.apple.dt.Xcode IDEBuildOperationMaxNumberOfConcurrentCompileTasks 4

    - name: Verify Code Signing Identity
      run: security find-identity -v -p codesigning

    - name: Build and distribute to Firebase App Distribution
      run: bundle exec fastlane distribute --verbose
      timeout-minutes: 20
      env:
        FIREBASE_APP_DISTRIBUTION_API_TOKEN: ${{ secrets.FIREBASE_APP_DISTRIBUTION_API_TOKEN }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
